import { IterationCountType, DirectionType, AnimatorState, EasingFunction, FillModeType, PlayStateType, EasingType, AnimatorOptions, AnimatorEvents } from "./types";
import EventEmitter from "@scena/event-emitter";
export declare function isDirectionReverse(iteration: number, iteraiontCount: IterationCountType, direction: DirectionType): boolean;
declare class Animator<Options extends AnimatorOptions = AnimatorOptions, State extends AnimatorState = AnimatorState, Events extends {} = {}> extends EventEmitter<AnimatorEvents & Events> {
    state: State;
    private timerId;
    constructor(options?: Partial<Options & AnimatorOptions>);
    setEasing(curveArray: string | number[] | EasingFunction): this;
    setOptions(options?: Partial<AnimatorOptions>): this;
    getTotalDuration(): number;
    getActiveDuration(delay?: boolean): number;
    isEnded(): boolean;
    isPaused(): boolean;
    start(delay?: number): boolean;
    play(toTime?: number): this;
    pause(): this;
    finish(): this;
    end(): this;
    setTime(time: number | string, isTick?: boolean, isParent?: boolean): this;
    getTime(): number;
    getUnitTime(time: string | number): number;
    isDelay(): boolean;
    setIteration(iterationCount: number): this;
    protected calculate(): this;
    private tick;
}
interface Animator<Options extends AnimatorOptions = AnimatorOptions, State extends AnimatorState = AnimatorState, Events extends {} = {}> extends EventEmitter<AnimatorEvents & Events> {
    setId(id: number | string): this;
    getId(): number | string;
    getIterationTime(): number;
    setIterationTime(time: number): this;
    setDelay(delay: number): this;
    getDelay(): number;
    setFillMode(fillMode: FillModeType): this;
    getFillMode(): FillModeType;
    setIterationCount(iterationCount: IterationCountType): this;
    getIterationCount(): IterationCountType;
    setDirection(direction: DirectionType): this;
    getDirection(): DirectionType;
    setPlayState(playState: PlayStateType): this;
    getPlayState(): PlayStateType;
    setPlaySpeed(playSpeed: number): this;
    getPlaySpeed(): number;
    setDuration(duration: number): this;
    getDuration(): number;
    getEasing(): EasingType;
    getEasingName(): string;
}
export default Animator;
