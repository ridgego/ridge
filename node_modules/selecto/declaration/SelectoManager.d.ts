import EventEmitter from "@scena/event-emitter";
import { SelectoOptions, SelectoProperties, SelectoEvents } from "./types";
declare class Selecto extends EventEmitter<SelectoEvents> {
    options: SelectoOptions;
    private target;
    private dragContainer;
    private container;
    private gesto;
    private injectResult;
    private selectedTargets;
    private dragScroll;
    private keycon;
    private _keydownContinueSelect;
    private _keydownContinueSelectWithoutDeselection;
    constructor(options?: Partial<SelectoOptions>);
    setSelectedTargets(selectedTargets: Array<HTMLElement | SVGElement>): this;
    getSelectedTargets(): Array<HTMLElement | SVGElement>;
    triggerDragStart(e: MouseEvent | TouchEvent): this;
    destroy(): void;
    getElementPoints(target: HTMLElement | SVGElement): number[][];
    getSelectableElements(): (HTMLElement | SVGElement)[];
    checkScroll(): void;
    findSelectableTargets(data?: any): void;
    clickTarget(e: MouseEvent | TouchEvent, clickedTarget?: Element): this;
    private setKeyController;
    private setKeyEvent;
    private setKeyContainer;
    private getContinueSelect;
    private getContinueSelectWithoutDeselect;
    private setToggleContinueSelect;
    private setToggleContinueSelectWithoutDeselect;
    private setPreventDefault;
    private setCheckInput;
    private initElement;
    private hitTest;
    private initDragScroll;
    private _select;
    private _selectEnd;
    private _onDragStart;
    private _checkSelected;
    private _onDrag;
    private _onDragEnd;
    private _sameCombiKey;
    private _onKeyDown;
    private _onKeyUp;
    private _onBlur;
    private _onDocumentSelectStart;
    private _findElement;
    private _refreshGroups;
}
interface Selecto extends SelectoProperties {
}
export default Selecto;
